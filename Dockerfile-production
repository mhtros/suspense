# Create a stage for building the application.
# $BUILDPLATFORM is an argument for the build command:
# e.g. docker build --platform $BUILDPLATFORM -t myapp .
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS dotnet-build

# Copy the contents of the current directory
# to the '/source' directory in the container
COPY . /source

# Set working directory
WORKDIR /source

# This is the architecture youâ€™re building for, which is passed in by the builder.
# Placing it here allows the previous steps to be cached across architectures.
ARG TARGETARCH

# Build the application.
# Leverage a cache mount to /root/.nuget/packages so that subsequent builds don't have to re-download packages.
# If TARGETARCH is "amd64", replace it with "x64" - "x64" is .NET's canonical name for this and "amd64" doesn't
#   work in .NET 6.0.
RUN --mount=type=cache,id=nuget,target=/root/.nuget/packages \
    dotnet publish -a ${TARGETARCH/amd64/x64} --use-current-runtime --self-contained false -o /app

# Use Node.js as base image to build the client
FROM node:21-alpine3.18 AS node-build

# Set working directory
WORKDIR /client-temp

# Copy package.json and package-lock.json to work directory
COPY suspense.client/package*.json ./

# Install dependencies
RUN npm install

# Copy the entire project to the work directory
COPY suspense.client/ .

ARG REACT_APP_ENV
ENV REACT_APP_ENV=$REACT_APP_ENV

# Build the React application
RUN npm run build

# The example below uses an aspnet alpine image as the foundation for running the app.
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS final

# Set working directory
WORKDIR /app

# Copy everything needed to run the app from the "dotnet-build" stage.
COPY --from=dotnet-build /app .

# Copy the client build files from the "node-build" stage
COPY --from=node-build /client-temp/build ./wwwroot

# Delete the 'suspense.client' folder now that the build has complete
RUN rm -rf suspense.client

EXPOSE 5114

# Switch to a non-privileged user (defined in the base image) that the app will run under.
# See https://docs.docker.com/go/dockerfile-user-best-practices/
# and https://github.com/dotnet/dotnet-docker/discussions/4764
USER $APP_UID

ENTRYPOINT ["dotnet", "Suspense.Server.dll"]
